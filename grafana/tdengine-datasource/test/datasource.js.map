{"version":3,"sources":["../../src/datasource.js"],"names":["moment","require","GenericDatasource","instanceSettings","$q","backendSrv","templateSrv","type","url","name","q","headers","Authorization","getAuthorization","jsonData","timezone","Intl","DateTimeFormat","resolvedOptions","timeZone","generateSqlList","options","targets","filter","target","queryType","sql","hide","length","when","data","Promise","all","map","generateSql","refId","request","then","postQuery","res","result","arithmeticQueries","flat","err","console","log","desc","Error","response","status","message","title","params","resolve","reject","datasourceRequest","method","alias","aliasRow","regex","replace","match","g1","g2","group","queryStart","queryEnd","intervalMs","range","from","toISOString","to","toString","scopedVars","allVaribles","getVariables","variables","i","current","value","query","column_meta","rows","cols","aliasList","split","timeSeriesIndex","findIndex","item","formatType","push","columns","text","getRowAlias","resultItem","datapoints","k","timeShiftDuration","duration","timeshift","period","unit","utc","tz","add","valueOf","expression","targetRefIds","flatMap","field","index","targetResults","forEach","datapoint","dataArithmetic","functionArgs","join","functionBody","expressionFunction","Function","aliasListResult","Object","entries","args","apply","error","Array","isArray","parseInt","concat","input","_keyStr","output","chr1","chr2","chr3","enc1","enc2","enc3","enc4","charCodeAt","isNaN","charAt","defaultUser","user","defaultPassword","password","encode","values"],"mappings":"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","file":"datasource.js","sourcesContent":["import _ from \"lodash\";\nvar moment = require('./js/moment-timezone-with-data');\nexport class GenericDatasource {\n\n  constructor(instanceSettings, $q, backendSrv, templateSrv) {\n    // console.log(\"instanceSettings\",instanceSettings);\n    this.type = instanceSettings.type;\n    this.url = instanceSettings.url;\n    this.name = instanceSettings.name;\n    this.q = $q;\n    this.backendSrv = backendSrv;\n    this.templateSrv = templateSrv;\n    this.headers = { 'Content-Type': 'application/json' };\n    this.headers.Authorization = this.getAuthorization(instanceSettings.jsonData);\n    this.timezone = Intl.DateTimeFormat().resolvedOptions().timeZone;\n    this.generateSqlList = {};\n  }\n\n  query(options) {\n    // console.log('options',options);\n    if (options.timezone) {\n      this.timezone = options.timezone == \"browser\"?Intl.DateTimeFormat().resolvedOptions().timeZone:options.timezone;\n    }\n    const targets = options.targets.filter((target) => (!target.queryType||target.queryType === \"SQL\")&&target.sql&&!(target.hide === true));\n    if (targets.length <= 0) {\n      return this.q.when({ data: [] });\n    }\n    return Promise.all(targets.map(target => {\n      let sql = this.generateSql(target.sql,options);\n      this.generateSqlList[target.refId]=sql;\n      return this.request('/rest/sqlutc',sql).then(res => this.postQuery(target,res,options));\n    }))\n      .then(data => {\n        let result = this.arithmeticQueries(data,options).flat();\n        // console.log('result',result);\n        return {data:result};\n      },(err)=>{\n        console.log(err);\n        if (err.data&&err.data.desc) {\n          throw new Error(err.data.desc);\n        }else{\n          throw new Error(err);\n        }\n      });\n  }\n\n  testDatasource() {\n    return this.request('/rest/sqlutc','show databases').then(response => {\n        if (!!response && response.status === 200) {\n          return { status: \"success\", message: \"TDengine Data source is working\", title: \"Success\" };\n        }\n        return { status: \"error\", message: \"TDengine Data source is not working\", title: \"Failed\" };\n      });\n  }\n\n  request(url , params) {\n    if (!params) {\n      return new Promise((resolve, reject)=>{\n        resolve();\n      });\n    }\n    return this.backendSrv.datasourceRequest({\n      url: `${this.url}${url}`,\n      data: params,\n      method: 'POST',\n      headers: this.headers,\n    });\n  }\n\n  getRowAlias(alias, aliasRow,options) {\n    if (!alias) {\n      return aliasRow;\n    }\n    alias = this.generateSql(alias,options);\n    const regex = /\\$(\\w+)|\\[\\[([\\s\\S]+?)\\]\\]/g;\n    return alias.replace(regex,(match, g1, g2) => {\n      const group = g1 || g2;\n\n      if (group === 'col') {\n        return aliasRow;\n      }\n      return match;\n    });\n  }\n  generateSql(sql,options) {\n    // console.log('sql',sql);\n    if (!sql||sql.length == 0) {\n      return sql;\n    }\n\n    var queryStart = \"now-1h\";\n    var queryEnd = \"now\";\n    var intervalMs = \"20000\";\n    if (!!options) {\n      if (!!options.range && !!options.range.from ) {\n        queryStart = options.range.from.toISOString();\n      }\n  \n      if (!!options.range && !!options.range.to ) {\n        queryEnd = options.range.to.toISOString();\n      }\n      \n      if (!!options.intervalMs ) {\n        intervalMs = options.intervalMs.toString();\n      }\n  \n      sql = this.templateSrv.replace(sql, options.scopedVars, 'csv');\n    }\n    \n    intervalMs += \"a\";\n    sql = sql.replace(/^\\s+|\\s+$/gm, '');\n    sql = sql.replace(\"$from\", \"'\" + queryStart + \"'\");\n    sql = sql.replace(\"$begin\", \"'\" + queryStart + \"'\");\n    sql = sql.replace(\"$to\", \"'\" + queryEnd + \"'\");\n    sql = sql.replace(\"$end\", \"'\" + queryEnd + \"'\");\n    sql = sql.replace(\"$interval\", intervalMs);\n    \n    const allVaribles = this.templateSrv.getVariables ? this.templateSrv.getVariables() : this.templateSrv.variables||[];\n    for (let i = 0; i < allVaribles.length; i++) {\n      if (allVaribles[i].current&&allVaribles[i].current.value) {\n        sql = sql.replace(\"$\"+allVaribles[i].name, allVaribles[i].current.value);\n      }\n    }\n\n    return sql;\n  }\n\n  postQuery(query, response,options) {\n    // console.log('query',query);\n    // console.log('response',response);\n    if (!response||!response.data||!response.data.data) {\n      return [];\n    }\n    const headers = response.data.column_meta;\n    const data = response.data.data;\n    const rows = response.data.rows;\n    const cols = headers.length;\n    const result = [];\n    const aliasList = (query.alias||'').split(',')||[];\n    if (!!headers&&!!headers[0]&&!!headers[0][1]) {\n      const timeSeriesIndex = headers.findIndex(item => item[1] === 9);\n      if (timeSeriesIndex == -1||query.formatType == 'Table') {\n        result.push({columns:headers.map(item => ({text:item[0]})),rows:data,type:'table',refId:query.refId,target:this.getRowAlias(aliasList[0],headers[0][0],options),hide:!!query.hide});\n      }else{\n        for (let i = 0; i < cols; i++) {\n          if (i == timeSeriesIndex) {\n            continue;\n          }\n          let aliasRow = headers[i][0];\n          if (i<=aliasList.length) {\n            aliasRow = this.getRowAlias(aliasList[i-1],aliasRow,options);\n          }\n          let resultItem = {datapoints:[],refId:query.refId,target:aliasRow,hide:!!query.hide};\n          for (let k = 0; k < rows; k++) {\n            let timeShiftDuration = moment.duration();\n            if (query.timeshift&&query.timeshift.period&&query.timeshift.unit) {\n              timeShiftDuration = moment.duration(query.timeshift.period,query.timeshift.unit);\n            }\n            resultItem.datapoints.push([data[k][i],moment.utc(data[k][timeSeriesIndex]).tz(this.timezone).add(timeShiftDuration).valueOf()]);\n          }\n          result.push(resultItem);\n        }\n      }\n    }\n    // console.log('result',result);\n    return result;\n  }\n  arithmeticQueries(data,options) {\n    const arithmeticQueries = options.targets.filter((target) => target.queryType === \"Arithmetic\"&&target.expression&&!(target.hide === true));\n    if (arithmeticQueries.length == 0) return data;\n    let targetRefIds = data.flatMap((item)=>item.flatMap((field,index)=>(index == 0?[field.refId,field.refId+'__'+index]:[field.refId+'__'+index])));\n    // console.log('targetRefIds',targetRefIds);\n    let targetResults = {};\n    data.forEach((item)=>{\n      item.forEach((field,index)=>{\n        field.datapoints.forEach(datapoint => {\n          targetResults[datapoint[1]] = targetResults[datapoint[1]]||[];\n          if (index == 0) {\n            targetResults[datapoint[1]].push(datapoint[0]);\n          }\n          targetResults[datapoint[1]].push(datapoint[0]);\n        })\n      })\n    });\n    \n    try {\n      let dataArithmetic = arithmeticQueries.map(target => {\n        let functionArgs = targetRefIds.join(', ');\n        let functionBody = \"return (\" + target.expression + \");\";\n        let expressionFunction = new Function(functionArgs, functionBody);\n        let result = null;\n        const aliasList = (target.alias||'').split(',').map(alias => this.getRowAlias(alias,target.refId,options));\n\n        const aliasListResult = [];\n        Object.entries(targetResults).forEach(args => {\n          if (args[1].length === targetRefIds.length) {\n            try {\n              result = expressionFunction.apply(this, args[1]);\n            } catch (error) {\n              throw error\n            }\n          }\n          // else{\n          //   console.log('args not full',targetRefIds,args);\n          // }\n          if (!Array.isArray(result)) {\n            result = [result];\n          }\n          result.forEach((item,index)=>{\n            aliasListResult[index] = aliasListResult[index]||{datapoints:[],refId:target.refId,target:aliasList[index]||(target.refId+'__'+index),hide:!!target.hide};\n            aliasListResult[index].datapoints.push([item,parseInt(args[0])]);\n          })\n        });\n        return aliasListResult;\n      });\n      return data.concat(dataArithmetic);\n    }catch (err) {\n      // console.log(err);\n      throw new Error(err);\n    }\n  }\n\n  encode(input) {\n    var _keyStr = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\";\n    var output = \"\";\n    var chr1, chr2, chr3, enc1, enc2, enc3, enc4;\n    var i = 0;\n    while (i < input.length) {\n      chr1 = input.charCodeAt(i++);\n      chr2 = input.charCodeAt(i++);\n      chr3 = input.charCodeAt(i++);\n      enc1 = chr1 >> 2;\n      enc2 = ((chr1 & 3) << 4) | (chr2 >> 4);\n      enc3 = ((chr2 & 15) << 2) | (chr3 >> 6);\n      enc4 = chr3 & 63;\n      if (isNaN(chr2)) {\n        enc3 = enc4 = 64;\n      } else if (isNaN(chr3)) {\n        enc4 = 64;\n      }\n      output = output + _keyStr.charAt(enc1) + _keyStr.charAt(enc2) + _keyStr.charAt(enc3) + _keyStr.charAt(enc4);\n    }\n\n    return output;\n  }\n\n  getAuthorization(jsonData) {\n    jsonData = jsonData || {};\n    var defaultUser = jsonData.user || \"root\";\n    var defaultPassword = jsonData.password || \"taosdata\";\n\n    return \"Basic \" + this.encode(defaultUser + \":\" + defaultPassword);\n  }\n\n  generateTimeshift(options, target) {\n    var alias = target.alias || \"\";\n    alias = this.templateSrv.replace(alias, options.scopedVars, 'csv');\n    return alias;\n  }\n  generateAlias(options, target) {\n    var alias = target.alias || \"\";\n    alias = this.templateSrv.replace(alias, options.scopedVars, 'csv');\n    return alias;\n  }\n\n  metricFindQuery(query, options) {\n    // console.log('options',options);\n    return this.request('/rest/sqlutc', this.generateSql(query,options)).then(res => {\n      if (!res||!res.data||!res.data.data) {\n        return [];\n      }else{\n        console.log('res',res);\n        let values = [];\n        for (let i = 0; i < res.data.data.length; i++) {\n          values.push({text:''+res.data.data[i]});\n        }\n        return values;\n      }\n    });\n  }\n}\n"]}